[gd_scene load_steps=17 format=3 uid="uid://bpf8q8g1rtg1e"]

[ext_resource type="Script" path="res://scripts/interactables/door.gd" id="1_yoyqc"]
[ext_resource type="ArrayMesh" uid="uid://b14ucul5ucp3l" path="res://assets/model/door/door_base.obj" id="2_7crcp"]
[ext_resource type="Material" uid="uid://b71grmrowo1xu" path="res://materials/door/door_wood.tres" id="3_l8k4e"]
[ext_resource type="AudioStream" uid="uid://c6kfrmofx7kar" path="res://assets/sounds/door_open.ogg" id="4_gwxu0"]
[ext_resource type="Material" uid="uid://bn58ndial6h26" path="res://materials/door/door_glass.tres" id="4_yrdeu"]
[ext_resource type="AudioStream" uid="uid://dngvvdqyhave4" path="res://assets/sounds/door_close.ogg" id="5_8iq6t"]
[ext_resource type="Material" uid="uid://bbryyh3ec5jur" path="res://materials/door/door_metal.tres" id="5_hpr6o"]
[ext_resource type="ArrayMesh" uid="uid://dtl0clen6ti7w" path="res://assets/model/door/door_lock.obj" id="6_u05sk"]

[sub_resource type="GDScript" id="GDScript_ir2qh"]
resource_name = "door_variables"
script/source = "extends Node3D

@export_enum(\"Right\", \"Left\") var handle_position: String = \"Right\"
"

[sub_resource type="BoxShape3D" id="BoxShape3D_iao75"]
size = Vector3(1.2, 2.52, 0.1)

[sub_resource type="Animation" id="Animation_w3l2g"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Audios/DoorOpen:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Audios/DoorClose:playing")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("DoorMesh/DoorHandle:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}

[sub_resource type="Animation" id="Animation_ykx3g"]
resource_name = "door_close_left_handle"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:rotation")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.333333, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector3(0, -1.5708, 0), Vector3(0, 0.116937, 0), Vector3(0, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Audios/DoorClose:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_n1y4o"]
resource_name = "door_close_right_handle"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:rotation")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.333333, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector3(0, 1.5708, 0), Vector3(0, -0.116354, 0), Vector3(0, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Audios/DoorClose:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="Animation" id="Animation_nmnkh"]
resource_name = "door_open_left_handle"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.333333, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, -1.64934, 0), Vector3(0, -1.5708, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Audios/DoorOpen:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("DoorMesh/DoorHandle:rotation")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.2, 0.366667),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, 0, 0.523599), Vector3(0, 0, 0)]
}

[sub_resource type="Animation" id="Animation_k5ite"]
resource_name = "door_open_right_handle"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.333333, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, 1.64951, 0), Vector3(0, 1.5708, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Audios/DoorOpen:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("DoorMesh/DoorHandle:rotation")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.2, 0.366667),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, 0, 0.523599), Vector3(0, 0, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_56mby"]
_data = {
"RESET": SubResource("Animation_w3l2g"),
"door_close_left_handle": SubResource("Animation_ykx3g"),
"door_close_right_handle": SubResource("Animation_n1y4o"),
"door_open_left_handle": SubResource("Animation_nmnkh"),
"door_open_right_handle": SubResource("Animation_k5ite")
}

[node name="Door" type="Node3D"]
script = SubResource("GDScript_ir2qh")

[node name="AnimatableBody3D" type="AnimatableBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.599791, 0, 0)
script = ExtResource("1_yoyqc")

[node name="CollisionShape3D" type="CollisionShape3D" parent="AnimatableBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.599791, 0, 0)
shape = SubResource("BoxShape3D_iao75")

[node name="DoorMesh" type="MeshInstance3D" parent="AnimatableBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.599791, 0, 0)
mesh = ExtResource("2_7crcp")
skeleton = NodePath("../..")
surface_material_override/0 = ExtResource("3_l8k4e")
surface_material_override/1 = ExtResource("4_yrdeu")
surface_material_override/2 = ExtResource("5_hpr6o")

[node name="DoorHandle" type="MeshInstance3D" parent="AnimatableBody3D/DoorMesh"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.498, 0, 0)
material_override = ExtResource("5_hpr6o")
cast_shadow = 0
mesh = ExtResource("6_u05sk")

[node name="AnimationPlayer" type="AnimationPlayer" parent="AnimatableBody3D"]
libraries = {
"": SubResource("AnimationLibrary_56mby")
}

[node name="Audios" type="Node3D" parent="AnimatableBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.599791, 0, 0)

[node name="DoorOpen" type="AudioStreamPlayer3D" parent="AnimatableBody3D/Audios"]
stream = ExtResource("4_gwxu0")
bus = &"SFX"

[node name="DoorClose" type="AudioStreamPlayer3D" parent="AnimatableBody3D/Audios"]
stream = ExtResource("5_8iq6t")
bus = &"SFX"

[connection signal="animation_finished" from="AnimatableBody3D/AnimationPlayer" to="AnimatableBody3D" method="_on_animation_player_animation_finished"]
