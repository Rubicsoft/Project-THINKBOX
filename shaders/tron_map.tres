[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://dd37cjnufvrn0"]

[ext_resource type="Texture2D" uid="uid://nndtl25vuujk" path="res://assets/texture/tron_grid.png" id="1_ehbbw"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_ubxng"]
op_type = 0

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_xiy8e"]
output_port_for_preview = 0
texture = ExtResource("1_ehbbw")
texture_type = 1

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_ste2v"]
constant = Color(0, 0, 0, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_x2i0r"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_o001l"]
default_input_values = [0, 0.0, 1, 4.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_bcs5m"]
constant = 20.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ttg0a"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_yspvu"]
default_input_values = [1, Vector2(50, 50), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_kgwqw"]
parameter_name = "FloatParameter"
hint = 2
min = 1.0
max = 100.0
step = 1.0
default_value_enabled = true
default_value = 50.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform float FloatParameter : hint_range(1, 100, 1) = 50;
uniform sampler2D tex_frg_2 : source_color;



void fragment() {
// ColorConstant:3
	vec4 n_out3p0 = vec4(0.000000, 0.000000, 0.000000, 1.000000);


// FloatConstant:4
	float n_out4p0 = 0.400000;


// Input:7
	vec2 n_out7p0 = UV;


// FloatParameter:9
	float n_out9p0 = FloatParameter;


// VectorCompose:10
	vec2 n_out10p0 = vec2(n_out9p0, n_out9p0);


// UVFunc:8
	vec2 n_in8p2 = vec2(0.00000, 0.00000);
	vec2 n_out8p0 = (n_out7p0 - n_in8p2) * n_out10p0 + n_in8p2;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, n_out8p0);


// FloatConstant:6
	float n_out6p0 = 20.000000;


// FloatOp:5
	float n_out5p0 = n_out2p0.x * n_out6p0;


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);
	ROUGHNESS = n_out4p0;
	EMISSION = vec3(n_out5p0);


}
"
graph_offset = Vector2(-380.608, 158.417)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_xiy8e")
nodes/fragment/2/position = Vector2(-660, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_ste2v")
nodes/fragment/3/position = Vector2(20, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_x2i0r")
nodes/fragment/4/position = Vector2(40, 240)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatOp_o001l")
nodes/fragment/5/position = Vector2(80, 420)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_bcs5m")
nodes/fragment/6/position = Vector2(-300, 620)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_ttg0a")
nodes/fragment/7/position = Vector2(-1440, 180)
nodes/fragment/8/node = SubResource("VisualShaderNodeUVFunc_yspvu")
nodes/fragment/8/position = Vector2(-1020, 180)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_kgwqw")
nodes/fragment/9/position = Vector2(-1540, 540)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorCompose_ubxng")
nodes/fragment/10/position = Vector2(-1160, 560)
nodes/fragment/connections = PackedInt32Array(4, 0, 0, 3, 2, 0, 5, 0, 5, 0, 0, 5, 6, 0, 5, 1, 3, 0, 0, 0, 7, 0, 8, 0, 8, 0, 2, 0, 9, 0, 10, 0, 9, 0, 10, 1, 10, 0, 8, 1)
